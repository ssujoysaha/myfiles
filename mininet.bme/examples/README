
Mininet Examples

These examples are intended to help you get started using
Mininet's Python API.

---

consoles.py:

This example creates a grid of console windows, one for each node, 
and allows interaction with and monitoring of each console, including
graphical monitoring.

emptynet.py:

This example demonstrates creating an empty network (i.e. with no
topology object) and adding nodes to it.

linearbandwidth.py:

This example shows how to create a custom topology programatically
by subclassing Topo, and how to run a series of tests on it.

miniedit.py:

This example demonstrates creating a network via a graphical editor.

multitest.py:

This example creates a network and runs multiple tests on it.

scratchnet.py, scratchnetuser.py:

These two examples demonstrate how to create a network by using the lowest-
level Mininet functions. Generally the higher-level API is easier to use,
but scratchnet shows what is going on behind the scenes.

sshd.py:

This example shows how to run an sshd process in each host, allowing
you to log in via ssh. This requires connecting the Mininet data network
to an interface in the root namespace (generaly the control network
already lives in the root namespace, so it does not need to be explicitly
connected.)

treeping64:

This example creates a 64-host tree network, and attempts to check full
connectivity using ping, for three different switch/datapath types.

tree1024.py:

This example attempts to create a 1024-host network, and then runs the
CLI on it. It may run into scalability limits, depending on available
memory and sysctl configuration (see INSTALL.)

udpbwtest.py:

This example shows how to run a test across an entire network, and monitor
the output of a set of hosts in real time.
